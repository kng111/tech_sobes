'''
1 unittest:

Преимущества:

Стандартная библиотека: 
    unittest входит в стандартную библиотеку Python,
        что означает, что нет необходимости устанавливать дополнительные пакеты.

Множество функций: 
    unittest предоставляет богатый набор функций для организации тестов,
      включая фикстуры, параметризацию тестов и другие возможности.


Недостатки:
    Синтаксическая сложность: 
        Иногда считается,
          что синтаксис unittest более громоздкий и менее удобный по сравнению с другими фреймворками.


2 pytest:

Преимущества:

Простота и удобство:
     pytest предоставляет простой и понятный синтаксис для написания тестов,
       а также множество дополнительных возможностей.

Множество плагинов: 
    Существует множество плагинов для pytest,
      расширяющих его функциональность (например, параметризация, фикстуры и т. д.).

Недостатки:

Дополнительная зависимость:
    pytest является сторонней библиотекой, и её нужно установить перед использованием.

Рекомендации:
    Если вы работаете в среде,
      где unittest уже широко используется,
        и вам необходима совместимость с другими инструментами,
          то использование unittest может быть разумным выбором.

Если вы предпочитаете более удобный и современный синтаксис,
 и вас устраивает использование дополнительных пакетов,
   то pytest часто считается более удобным и гибким вариантом.

В обоих случаях важно использовать тестовый фреймворк в соответствии с требованиями вашего проекта и ваших предпочтений.
'''
def test():
    return(123)
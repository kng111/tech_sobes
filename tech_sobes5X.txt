По техническому этапу: вопросы по
 python 3, 
	ООП - что такое, какие принципы есть ( Принцип это условный принцип как нужно программировать в основном мы создаём принципы сами ориентируясь на то что сами знаешь или то что знаем)
		solid:
			s - solo (Пример с применением принципа единственной ответственности, каждый отвечает сам за себя)

			o - open/close (Программные сущности (классы, модули, функции) должны быть открыты для расширения,
					 но не для модификации)

			i - интерфейс ( если пользователь отправляет email сообщение не грузить ему sms интерфейс)

			l - супер классы (пример с пингвином и орлом)

			d - абстракция (Модули верхних уровней не должны зависеть от модулей нижних уровней. Оба типа модулей должны зависеть от абстракций.
					Абстракции не должны зависеть от деталей. Детали должны зависеть от абстракций.)


django, 	

django orm, 

sql, 

asyncio:
	awit ( зачем и как использовать) - await используется для приостановки выполнения корутины 
        					в ожидании завершения асинхронной операции

	,async ( зачем и как использовать) -  async используется при определении корутин

	,asyncio ( run, зачем и как использовать) - предоставляющая инструменты для написания асинхронного кода,
        						включая корутины

	корутины - Корутины в Python - это специальный тип функций,
 			объявляемых с использованием ключевого слова async

кратко,	корутина == асинхронная функция, async == определяет корутину (из библиотеки), await == останавливает выполнение асинхронна (предерживает, await asyncio.sleep(3)), asyncio == так же прописывается при вызове функции что бы запустить асинхрон в функции ( многопоточность )

БД, 


git, Опыт работы с системами контроля версий Git - написать все команды ( каждая команда работает по своему принципу ) 


linux, 

pytest, - любой тест проходит там где написано test в начале 
	вызов всех тестов в дериктории в названии которых есть тест в начале или в конце, через pytest в консоль
		если мы обращаемся к конкретному файлу то командой pytest название файла.py::название функции
			captured = capsys.readouterr() перехвтывает ответ от функции которую вызываем ( проверяем) 
				assert - проверяет правильно ли получился ответ

	так же для проверки и создании тестов создаём отдельный файл если проверить целый файл можно pytest или cd файл и pytest название файла.py::



алгоритмов нет, лайвкоддинг по факту (в зависимости от вашего уровня)
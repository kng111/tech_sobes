'''
Наследование - механизм языка, который позволяет описывать новый класс на основе существующего.
 В "истинном" ООП нужно для обеспечения реализации полиморфизма.
   Как самостоятельная единица - не нужно и даже вредно,
 потому что является причиной сильного связывания.
   Наследованию лучше предпочитать композицию.
'''

'''
Наследие (наследование) в программировании — это механизм, который позволяет новому классу (подклассу) использовать свойства и методы существующего класса (родительского класса). Наследование способствует повторному использованию кода, организации кода в иерархии и обеспечивает иерархию типов.

Кратко:

Наследование позволяет создать новый класс, используя свойства и методы существующего класса.
Подкласс (наследующий класс) наследует (получает) атрибуты и методы родительского класса.
Родительский класс (базовый класс) содержит общую функциональность, которую можно использовать в нескольких частях программы.
'''
class Animal:
    def __init__(self, name):
        self.name = name

    def speak(self):
        pass

class Dog(Animal):
    def speak(self):
        return "Woof!"

class Cat(Animal):
    def speak(self):
        return "Meow!"

# Использование наследования
dog = Dog("Buddy")
cat = Cat("Whiskers")

print(dog.name)  # Вывод: Buddy
print(dog.speak())  # Вывод: Woof!

print(cat.name)  # Вывод: Whiskers
print(cat.speak())  # Вывод: Meow!





"""
Корутины в Python предоставляют механизм для эффективного управления асинхронным кодом.
 Они позволяют выполнению программы продолжаться в ожидании завершения асинхронных операций,
   вместо блокировки и ожидания каждой операции по очереди.
     Это улучшает производительность и позволяет легко обрабатывать множество задач параллельно,
       особенно в сценариях сетевого программирования и веб-разработки.
"""

import asyncio

# Простая корутина
async def simple_coroutine():
    print("Start")
    await asyncio.sleep(2)
    print("End")

# Асинхронная функция, которая запускает корутину
async def main():
    print("Before coroutine")
    await simple_coroutine()
    print("After coroutine")

# Запуск асинхронной программы
asyncio.run(main())


"""
Корутины в Python - это специальный тип функций,
 объявляемых с использованием ключевого слова async.
   Они предназначены для обработки асинхронных операций,
     таких как сетевые запросы или ввод/вывод,
       без блокировки выполнения программы.
         Используются для эффективного управления параллельными задачами в асинхронном программировании.
           Для запуска корутины используется библиотека asyncio и ключевое слово await.
"""

"""
Отсутствие блокировок
Эффективное управление ресурсами
Легкость в использовании
Обработка множества одновременных задач
Асинхронные библиотеки
"""
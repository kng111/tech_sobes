'''
Что такое асинхронное программирование в Python?

Ответ:
    Асинхронное программирование в Python позволяет эффективно управлять выполнением кода,
      особенно в сценариях с блокирующими операциями,
        такими как ввод/вывод или сетевые запросы.

        
Что такое корутина?

Ответ: 
    Корутина в Python - это асинхронная функция,
      объявляемая с использованием ключевого слова async,
        которая позволяет эффективно обрабатывать асинхронные операции.


Какие преимущества асинхронного программирования в Python?

Ответ:
    Эффективное управление ресурсами,
      отсутствие блокировок,
        возможность параллельного выполнения множества задач,
          обеспечение отзывчивости приложений.


Что такое asyncio в Python?

Ответ: 
    asyncio - это библиотека в Python,
      предоставляющая инструменты для написания асинхронного кода,
        включая корутины,
          событийные циклы и другие инструменты для управления асинхронными задачами.


Какие ключевые слова используются для работы с асинхронным кодом?

Ответ: 
    async используется при определении корутин,
      а await используется для приостановки выполнения корутины 
        в ожидании завершения асинхронной операции.

        
В чем разница между синхронным и асинхронным кодом?

Ответ: Синхронный код выполняется последовательно,
 блокируя выполнение при блокирующих операциях.
   Асинхронный код позволяет продолжать выполнение других задач 
   в ожидании завершения асинхронных операций.

Когда следует использовать асинхронное программирование в Python?

Ответ: 
    Асинхронное программирование полезно в сценариях с множеством блокирующих операций,
        таких как ввод/вывод или сетевые запросы,
          а также в ситуациях,
            где требуется обработка множества параллельных задач.
'''